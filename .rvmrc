#!/usr/bin/env bash

# This is an RVM Project .rvmrc file, used to automatically load the ruby
# development environment upon cd'ing into the directory

# First we specify our desired <ruby>[@<gemset>], the @gemset name is optional.
ruby_version="ruby-1.9.2"
gemset="master2"

environment_id="${ruby_version}@${gemset}"

# Check that we have correct Ruby interpreter installed
if rvm list strings | grep -q "${ruby_version}" ; then
  # We attempt to load the desired environment directly from the environment
  # file, this is very fast and efficicent compared to running through the entire
  # CLI and selector. If you want feedback on which environment was used then
  # insert the word 'use' after --create as this triggers verbose mode.
  if [[ -d "${rvm_path:-$HOME/.rvm}/environments" \
    && -s "${rvm_path:-$HOME/.rvm}/environments/$environment_id" ]] ; then
    \. "${rvm_path:-$HOME/.rvm}/environments/$environment_id"
  else
    # If the environment file has not yet been created, use the RVM CLI to select.
    rvm --create  "$environment_id"
  fi

  # Ensure that Bundler is installed, install it if it is not.
  if ! command -v bundle ; then
    printf "The rubygem 'bundler' is not installed, installing it now.\n"
    gem install bundler
  fi

  # Bundle while redcing excess noise.
  printf "Bundling your gems this may take a few minutes on a fresh clone.\n"
  bundle | grep -v 'Using' | grep -v 'complete' | sed '/^$/d'

  #local dir=$PWD
  #cd $rvm_rvmrc_cwd/backend && bundle | grep -v 'Using' | grep -v 'complete' | sed '/^$/d'
  #cd $rvm_rvmrc_cwd/rui && bundle | grep -v 'Using' | grep -v 'complete' | sed '/^$/d'
  #cd $dir

else # No interpreter
  # Notify the user to install the desired interpreter before proceeding.
  echo "${ruby_version} was not found, please run 'rvm install ${ruby_version}' and then cd back into the project directory."
fi
